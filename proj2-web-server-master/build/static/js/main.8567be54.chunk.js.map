{"version":3,"sources":["../node_modules/peerjs/dist sync","component/Restarant_card/Card.js","component/Dialog/Dialog.js","component/Restarant_card/RatingCard.js","component/Restarant_card/RatingPanel.js","component/Restarant_card/Panel.js","action/user.js","reducer/user.js","action/error.js","reducer/error.js","stores/index.js","component/Navbar/Error.js","component/Navbar/LoginForm.js","component/Navbar/SignupForm.js","component/P2pPanel/AskForHelp.js","component/P2pPanel/ProvideHelp.js","component/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Card","props","className","classList","style","width","src","img","alt","name","href","url","target","Dialog","display","show","dialog","onClick","console","log","currentTarget","toggleShow","children","ReactDOM","createPortal","document","body","RatingCard","maxHeight","addScore","nextRestaurant","index","background","color","marginLeft","RatingPanel","useState","setIndex","showRestaurantCard","scores","setScore","restaurants","length","restaurantCard","image_url","categories","closeRatingPanel","score","newScores","slice","push","showBanner","login","flex","connect","state","user","isNewUser","list","rating","recommendation","setRecommendation","useEffect","userID","position","latitude","longitude","fetch","method","mode","then","response","json","res","i","Object","restaurantsPromiseArr","map","restaurant","headers","Promise","all","rawRestaurantsArr","restaurantsJSON","status","data","JSON","parse","business_id","restaurantList","key","stringify","user_id","initUser","type","userName","username","action","setError","error","message","rootReducer","combineReducers","store","createStore","LoginForm","errorBlock","setUser","class","htmlFor","value","onChange","password","preventDefault","SignupForm","repeatpassword","signup","submitNewUser","recoLink","setState","text","setText","Peer","peer","candidates","setCandidate","pickUser","otherUser","setOtherUser","connection","setConnection","recommdation","setRecommdation","on","send","candidateList","candidate","conn","overflow","candidateId","split","ProvideHelp","setConn","setRes","restaurantsList","server_url","dispatch","credentials","catch","String","init","toggleLoginDialog","toggleSignUpDialog","logo","App","Boolean","window","location","hostname","match","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8567be54.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 31;","import React from 'react'\nimport './Card.css'\n\nfunction Card(props){\n    return (\n        <div className={props.classList + \"card myCard\"} style={{width: \"18rem\"}}>\n            <img src={props.img} className=\"card-img-top\" alt=\"...\"/>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{props.name}</h5>\n                <a href={props.url} className=\"btn btn-primary\" target=\"_blank\">Details</a>\n            </div>\n        </div>\n    )\n}\n\nexport default Card","import React from 'react'\nimport ReactDOM from 'react-dom';\nimport './Dialog.css'\n\nfunction Dialog(props){\n    let style = {\n        display: (props.show)? \"inherit\" : \"none\"\n    }\n\n    function closeDialog(e){\n        console.log('clicked!')\n        if(e.target===e.currentTarget) props.toggleShow(false);\n    }\n\n    const dialog =  (\n        <div className='Dialog' style={style}>\n            <div className='DialogCover' onClick={closeDialog}></div>\n            {props.children}\n        </div>\n    )\n\n    return  (\n        ReactDOM.createPortal(dialog, document.body)\n    )\n}\n\n\nexport default Dialog","import React from 'react'\nimport './Card.css'\n\nfunction RatingCard(props){\n    return (\n        <div className={props.classList + \"card myCard\"}>\n            <img src={props.img} style={{maxHeight:\"400px\"}} className=\"card-img-top\" alt=\"...\"/>\n            <div className=\"card-body\">\n                <h5 className=\"card-title\">{props.name}</h5>\n                    <button onClick={()=>{props.addScore(5); props.nextRestaurant(props.index+1)}} style={{background:'rgb(136,167,179)', color:\"white\"}}className=\"btn\">Like it!</button>\n                    <button onClick={()=>{props.addScore(1); props.nextRestaurant(props.index+1)}}  style={{background:'rgb(196,150,168)', color:\"white\", marginLeft:'10px'}} className=\"btn\">No No No</button>\n            </div>\n        </div>\n    )\n}\n\nexport default RatingCard","import React, { useState } from \"react\";\nimport Dialog from \"../Dialog/Dialog\";\nimport RatingCard from \"./RatingCard\";\n\nfunction RatingPanel(props) {\n  const [index, setIndex] = useState(0);\n  const [showRestaurantCard, toggleShow] = useState(false);\n  const [scores, setScore] = useState([]);\n\n  const nextRestaurant = (restaurants) => {\n    return (index) => {\n      if (index === restaurants.length) {\n        props.closeRatingPanel(false, scores)\n        toggleShow(false);\n      }\n      setIndex(index);\n    };\n  };\n\n  const addScore = (score) => {\n    let newScores = scores.slice();\n    newScores.push(score);\n    setScore(newScores);\n  };\n\n  if (index === props.restaurants.length) {\n    return <div></div>;\n  }\n\n  const restaurantCard = (\n    <RatingCard\n      classList=\"DialogContent Diaglog-card\"\n      img={props.restaurants[index].image_url}\n      name={props.restaurants[index].name}\n      categories={props.restaurants[index].categories}\n      nextRestaurant={nextRestaurant(props.restaurants)}\n      addScore={addScore}\n      index={index}\n    />\n  );\n\n  let showBanner = props.login\n    ? `You have to finish your initial review, ${\n        props.restaurants.length - index\n      } businesses remained`\n    : \"You should log in before you check your recommendation\";\n\n  return (\n    <div className=\"mask\" style={props.style}>\n      <div className=\"mask-layer\"></div>\n      <div className=\"mask-banner\">\n        <h1 style={{ flex: \"0 0 100%\" }}>{showBanner}</h1>\n        <button\n          onClick={() => {\n            toggleShow(true);\n          }}\n          style={{ background: \"rgb(136,167,179)\", color: \"white\" }}\n          className=\"btn mask-button\"\n        >\n          show it!\n        </button>\n      </div>\n      <Dialog show={showRestaurantCard} toggleShow={toggleShow}>\n        {restaurantCard}\n      </Dialog>\n    </div>\n  );\n}\n\nexport default RatingPanel;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Card from \"./Card\";\nimport \"./Panel.css\";\nimport RatingPanel from \"./RatingPanel\";\n\nfunction Panel(props) {\n  const [recommendation, setRecommendation] = useState({isNewUser:false, login: false, list:[], rating:[]});\n\n  const closeRatingPanel=(state, rating)=>{\n    let business_id = recommendation.list.map(res=>{\n      return res.business_id;\n    })\n    if(recommendation.isNewUser){\n      fetch('http://ec2-18-208-177-247.compute-1.amazonaws.com:5000/newuser',{\n        method:'POST',\n        mode:'cors',\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body:JSON.stringify({\n          user_id:props.user.userID,\n          business_id:business_id,\n          rating:rating\n        })\n      }).then(res=>{\n        let url = `http://ec2-18-208-177-247.compute-1.amazonaws.com:5000?user_id=${props.user.userID}&latitude=${props.user.position.latitude}&longtitude=${props.user.position.longitude}`;\n        fetch(url, {\n          method: \"GET\",\n          mode:'cors'\n        })\n          .then((response) => response.json())\n          .then((res) => {\n            let restaurants = [];\n            if(res[\"10\"] === 1){\n              for(let i = 0; i < 10; i++){\n                restaurants.push(res[i]);\n              }\n            }else{\n              for(let i = 0; i < Object.keys(res).length-1; i++){\n                restaurants.push(res[i][\"business id\"])\n              }\n            }\n            let restaurantsPromiseArr = restaurants.map((restaurant) => {\n              return fetch(\n                \"http://ec2-3-83-164-100.compute-1.amazonaws.com:8088/yelp-fusion/requestRecommendByID.do\",\n                {\n                  method: \"POST\",\n                  mode: \"cors\",\n                  headers: {\n                    \"Content-Type\": \"application/x-www-form-urlencoded\",\n                  },\n                  body: `restaurantID=${restaurant}`,\n                }\n              ).then((response) => response.json());\n            });\n            Promise.all(restaurantsPromiseArr).then((rawRestaurantsArr) => {\n              let restaurantsJSON = []\n              for(let restaurant of rawRestaurantsArr){\n                if(restaurant.status === 0){\n                  let data = JSON.parse(restaurant.data)\n                  restaurantsJSON.push(data)\n                }\n              }\n              setRecommendation({list:restaurantsJSON, isNewUser: false, login:true});\n            });\n          });\n      })\n    }\n  }\n\n  useEffect(() => {\n    if(props.user.userID){\n      let url = `http://ec2-18-208-177-247.compute-1.amazonaws.com:5000?user_id=${props.user.userID}&latitude=${props.user.position.latitude}&longtitude=${props.user.position.longitude}`;\n      fetch(url, {\n        method: \"GET\",\n        mode:'cors'\n      })\n        .then((response) => response.json())\n        .then((res) => {\n          let restaurants = [];\n          let show = (res[\"10\"] === 1);\n          if(show){\n            for(let i = 0; i < 10; i++){\n              restaurants.push(res[i]);\n            }\n          }else{\n            for(let i = 0; i < Object.keys(res).length-1; i++){\n              restaurants.push(res[i][\"business id\"])\n            }\n          }\n          let restaurantsPromiseArr = restaurants.map((restaurant) => {\n            return fetch(\n              \"http://ec2-3-83-164-100.compute-1.amazonaws.com:8088/yelp-fusion/requestRecommendByID.do\",\n              {\n                method: \"POST\",\n                mode: \"cors\",\n                headers: {\n                  \"Content-Type\": \"application/x-www-form-urlencoded\",\n                },\n                body: `restaurantID=${restaurant}`,\n              }\n            ).then((response) => response.json());\n          });\n          Promise.all(restaurantsPromiseArr).then((rawRestaurantsArr) => {\n            let restaurantsJSON = []\n            let i = 0;\n            for(let restaurant of rawRestaurantsArr){\n              if(restaurant.status === 0){\n                let data = JSON.parse(restaurant.data)\n                data = {...data, business_id: restaurants[i]}\n                i = i + 1;\n                restaurantsJSON.push(data)\n              }\n            }\n            setRecommendation({list:restaurantsJSON, isNewUser:show, login:true});\n          });\n        });\n    };\n  },[props.user.userID]);\n\n  const restaurantList = recommendation.list.map((restaurant, index) => (\n    <Card\n      key={restaurant.business_id}\n      img={restaurant.image_url}\n      name={restaurant.name}\n      categories={restaurant.categories}\n      url={restaurant.url}\n    />\n  ));\n\n  console.log(recommendation)\n  return (\n    <div>\n      <RatingPanel\n        style={recommendation.isNewUser ?{}:{display: \"none\" }}\n        login={recommendation.login}\n        restaurants={recommendation.list}\n        closeRatingPanel={closeRatingPanel}\n      ></RatingPanel>\n      <div className=\"App\">{restaurantList}</div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user,\n  };\n}\n\nexport default connect(mapStateToProps, null)(Panel);\n","export const INIT_USER = \"INIT_USER\"\nexport const GET_POSITION = \"GET_POSITION\"\n\nexport function initUser(user){\n    return {\n        type:INIT_USER,\n        userID:user.id,\n        userName:user.username\n    }\n}\n\nexport function getPosition(position){\n    return {\n        type:GET_POSITION,\n        position:position\n    }\n}","import {INIT_USER, GET_POSITION} from '../action/user'\n\nfunction user(state={}, action){\n    switch(action.type){\n        case INIT_USER:\n            return {\n                userID: action.userID,\n                userName: action.userName,\n                position:{\n                    latitude:'40',\n                    longitude:'-77',\n                }\n            }\n        case GET_POSITION:\n            return {\n                ...state,\n                position: action.position\n            }\n        default:\n            return state;\n    }\n}\n\nexport default user","export const ADD_ERROR = 'ADD_ERROR'\nexport const REMOVE_ERROR = 'REMOVE_ERROR'\n\nexport function setError(error){\n    console.log(error)\n    return {\n        type: ADD_ERROR,\n        message: error\n    }\n}\n\nexport function removeError(){\n    return {\n        type: REMOVE_ERROR\n    }\n}","import {ADD_ERROR, REMOVE_ERROR} from '../action/error'\n\nfunction error(state={}, action){\n    switch (action.type){\n        case ADD_ERROR:\n            return {\n                message: action.message\n            };\n        case REMOVE_ERROR:\n            return {}\n        default:\n            return state\n    }\n}\n\nexport default error","import { createStore, combineReducers } from 'redux'\nimport user from '../reducer/user'\nimport error from '../reducer/error'\n\nconst rootReducer = combineReducers({user: user, error:error})\n\nconst store = createStore(rootReducer);\n\n// const unsubscribe = store.subscribe(() => console.log(store.getState()))\n\nexport default store;","import React from 'react'\nimport './Error.css'\n\nfunction Error(props){\n    return (\n        <div className='formContent error roundedborder'>\n            {props.error}\n        </div>\n    )\n}\n\nexport default Error","import React, {useState} from 'react'\nimport './form.css'\nimport Error from './Error'\n\nfunction LoginForm(props){\n    const errorBlock = (props.error)? <Error error={props.error} /> : null\n    const [user, setUser] = useState({});\n    return(\n        <form className={props.class}>\n            {errorBlock}\n            <label className='formContent' htmlFor=\"account\">Account:</label>\n            <input className='formContent roundedborder' type=\"text\" id=\"account\" name=\"account\" value={user.username} onChange={(e)=>setUser({...user, username:e.target.value})} />\n            <label className='formContent' htmlFor=\"password\">Password:</label>\n            <input className='formContent roundedborder' type=\"password\" id=\"password\" name=\"password\" value={user.password} onChange={(e)=>setUser({...user, password:e.target.value})}/>\n            <button className='formContent formBtn btn btn-info' onClick={(e)=>{e.preventDefault();props.login(user)}} >Log in</button>\n        </form>\n    )\n}\n\nexport default LoginForm;","import React, {useState} from 'react';\nimport './form.css'\nimport Error from './Error'\n\nfunction SignupForm(props){\n    const errorBlock = (props.error)? <Error error={props.error} /> : null\n    const [user, setUser] = useState({});\n\n    const submitNewUser=()=>{\n        if(user.password !== user.repeatpassword){\n            props.setError(\"Error: The second password is different.\")\n            setUser({username:user.username})\n            return;\n        }\n        props.signup({username:user.username, password:user.password})\n    }\n\n    return(\n        <form className={props.class}>\n             {errorBlock}\n            <label className='formContent' htmlFor=\"account\">Account:</label>\n            <input className='formContent roundedborder' type=\"text\" id=\"signupaccount\" name=\"account\" value={user.username} onChange={(e)=>setUser({...user, username:e.target.value})}/>\n            <label className='formContent' htmlFor=\"password\">Password:</label>\n            <input className='formContent roundedborder' type=\"password\" id=\"signuppassword\" name=\"password\" value={user.password} onChange={(e)=>setUser({...user, password:e.target.value})}/>\n            <label className='formContent' htmlFor=\"repeatPassword\">Input the password again:</label>\n            <input className='formContent roundedborder' type=\"password\" id=\"repeatPassword\" name=\"repeatpassword\" value={user.repeatpassword} onChange={(e)=>setUser({...user, repeatpassword:e.target.value})}/>\n            <button className='formContent formBtn btn btn-info' onClick={(e)=>{e.preventDefault(); submitNewUser()}}>Sign up</button>\n        </form>\n    )\n}\n\nexport default  SignupForm;","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport Peer from \"peerjs\";\n\nfunction AskForHelp(props) {\n  const [state, setState] = useState(\"Waiting for establishing connection...\");\n  const [text, setText] = useState(\"Pick up one of the users\");\n  const [peer, setPeer] = useState(new Peer());\n  const [user, setUser] = useState({ id: \"\" });\n  const [candidates, setCandidate] = useState([]);\n  const [otherUser, setOtherUser] = useState({ pickUser: false });\n  const [connection, setConnection] = useState(null);\n  const [recommdation, setRecommdation] = useState(null);\n\n  useEffect(() => {\n    peer.on(\"open\", (id) => {\n      setState(\"Connected.\");\n      setUser({ id: id });\n    });\n    if (connection) {\n      connection.on(\"open\", () => {\n        connection.on(\"data\", (data) => {\n          setRecommdation(data);\n          setText(\"She/He recommends this to you\")\n        });\n        setState(\"Connected to user\");\n        setText(\"Your position is sent to other user\");\n        connection.send(props.user);\n      });\n    }\n  });\n\n  const getCandidate = () => {\n    fetch(\"http://ec2-3-83-164-100.compute-1.amazonaws.com:8088/p2p/getID.do\", {\n      method: \"GET\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.status === 0) {\n          let candidateIdString = data.data;\n          let candidateId = candidateIdString.split(\" \");\n          setCandidate(candidateId);\n        }\n      });\n  };\n\n  let recoLink;\n\n  if (recommdation) {\n    recoLink = <a href={recommdation.url}>{recommdation.name}</a>;\n  }\n\n  const candidateList = candidates.map((candidate) => (\n    <li\n      className=\"list-group-item\"\n      onClick={() => {\n        setOtherUser({ id: candidate, pickUser: true });\n        setState(`Connecting to ${candidate}`);\n        let conn = peer.connect(candidate);\n        setConnection(conn);\n      }}\n    >\n      {candidate}\n    </li>\n  ));\n\n  if (otherUser.pickUser) {\n    return (\n      <div className=\"DialogContent Card\" style={{ background: \"white\" }}>\n        <div className=\"card-body\">\n          <h1 className=\"card-title\">{state}</h1>\n          <h6 className=\"card-subtitle mb-2 text-muted\">\n            Your id is {user.id}\n          </h6>\n\n          <p className=\"card-text\">{text}</p>\n        </div>\n        <div className=\"card-body\">{recoLink}</div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"DialogContent Card\" style={{ background: \"white\" }}>\n        <div className=\"card-body\">\n          <h1 className=\"card-title\">{state}</h1>\n          <h6 className=\"card-subtitle mb-2 text-muted\">\n            Your id is {user.id}\n          </h6>\n          <p className=\"card-text\">{text}</p>\n        </div>\n        <ul\n          className=\"list-group list-group-flush\"\n          style={{ overflow: \"scroll\", maxHeight: \"500px\" }}\n        >\n          {candidateList}\n        </ul>\n        <div className=\"card-body\">\n          <button className=\"btn btn-primary\" onClick={() => getCandidate()}>\n            refresh\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user.position,\n  };\n}\n\nexport default connect(mapStateToProps, null)(AskForHelp);\n","import React, { useState, useEffect } from \"react\";\nimport Peer from \"peerjs\";\n\nfunction ProvideHelp(props) {\n  const [state, setState] = useState(\"Waiting for establishing connection...\");\n  const [peer, setPeer] = useState(new Peer());\n  const [user, setUser] = useState({ id: \"\" });\n  const [comm, setComm] = useState(\n    \"People who ask for help will see your id, please stay at this card.\"\n  );\n  const [list, setList] = useState([]);\n  const [conn, setConn] = useState();\n  const [restaurants, setRes] = useState([])\n\n  useEffect(() => {\n    peer.on(\"open\", (id) => {\n      setUser({ id: id });\n      fetch(\n        \"http://ec2-3-83-164-100.compute-1.amazonaws.com:8088/p2p/saveID.do\",\n        {\n          method: \"POST\",\n          mode: \"cors\",\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n          },\n          body: `inputID=${id}`,\n        }\n      )\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.status === 0) setState(\"Registered.\");\n        });\n    });\n    peer.on('connection',(conn)=>{\n      setState('Please recommand a restaurant');\n      conn.on('open',()=>{\n        conn.on('data',(data)=>{\n          console.log(data) \n          fetch(\"http://ec2-3-83-164-100.compute-1.amazonaws.com:8088/yelp-fusion/requestRecommend.do\",{\n            method: 'POST',\n            mode:'cors',\n            headers: {\n              \"Content-Type\": \"application/x-www-form-urlencoded\",\n            },\n            body: `latitude=${data.latitude}&longitude=${data.longitude}&price=1&term=Chinese`,\n          }).then(response=>response.json())\n          .then((res)=>{\n            console.log(res)\n            setRes(JSON.parse(res.data))\n          })\n        })\n      })\n      setConn(conn);\n    })\n  },[]);\n\n\n  let restaurantsList = restaurants.map((restaurant)=>{\n    return (\n      <li className=\"list-group-item\" onClick={()=>{conn.send({name: restaurant.name, url: restaurant.url})}}>{restaurant.name}</li>\n    )\n  })\n\n  return (\n    <div className=\"DialogContent Card\" style={{ background: \"white\" }}>\n      <div className=\"card-body\">\n        <h1 className=\"card-title\">{state}</h1>\n        <h6 className=\"card-subtitle mb-2 text-muted\">Your id is {user.id}</h6>\n        <p className=\"card-text\"></p>\n        <ul\n          className=\"list-group list-group-flush\"\n          style={{ overflow: \"scroll\", maxHeight: \"500px\" }}\n        >\n          {restaurantsList}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default ProvideHelp;\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { initUser, getPosition } from \"../../action/user\";\nimport { setError, removeError } from \"../../action/error\";\nimport \"./Navbar.css\";\nimport Dialog from \"../Dialog/Dialog\";\nimport LoginForm from \"./LoginForm\";\nimport SignupForm from \"./SignupForm\";\nimport AskForHelp from \"../P2pPanel/AskForHelp\";\nimport ProvideHelp from \"../P2pPanel/ProvideHelp\";\n\nconst server_url = 'http://wywe.azurewebsites.net'\n\nfunction Navbar(props) {\n  const [login, toggleLoginDialog] = useState(false);\n  const [signup, toggleSignUpDialog] = useState(false);\n  useEffect(() => {\n    props.init();\n  });\n  const logo = <div>WHAT DO YOU WANT TO EAT?</div>;\n  if (props.userName) {\n    return (\n      <nav>\n        {logo}\n        <div>Welcom back, {props.userName}</div>\n        <div>\n          <button\n            className=\"nav-btn btn btn-light\"\n            onClick={() => {\n              toggleLoginDialog(true);\n            }}\n          >\n            Ask for help\n          </button>\n          <button\n            className=\"nav-btn btn btn-light\"\n            onClick={() => toggleSignUpDialog(true)}\n          >\n            I'm willing to help\n          </button>\n        </div>\n        <Dialog show={login} toggleShow={toggleLoginDialog}>\n          <AskForHelp></AskForHelp>\n        </Dialog>\n        <Dialog show={signup} toggleShow={toggleSignUpDialog}>\n          <ProvideHelp></ProvideHelp>\n        </Dialog>\n      </nav>\n    );\n  }\n\n  return (\n    <nav>\n      {logo}\n      <div>\n        <button\n          className=\"nav-btn btn btn-light\"\n          onClick={() => {\n            console.log(\"clicked!\");\n            toggleLoginDialog(true);\n          }}\n        >\n          login\n        </button>\n        <button\n          className=\"nav-btn btn btn-light\"\n          onClick={() => toggleSignUpDialog(true)}\n        >\n          signup\n        </button>\n      </div>\n      <Dialog show={login} toggleShow={toggleLoginDialog}>\n        <LoginForm\n          error={props.error}\n          login={props.login}\n          class=\"DialogContent\"\n        />\n      </Dialog>\n      <Dialog show={signup} toggleShow={toggleSignUpDialog}>\n        <SignupForm\n          setError={props.setError}\n          error={props.error}\n          signup={props.signup}\n          class=\"DialogContent\"\n        />\n      </Dialog>\n    </nav>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    userName: state.user.userName,\n    userID: state.user.userID,\n    error: state.error.message,\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    login: (user) => {\n      fetch(server_url + \"/api/auth/login\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.error) throw new Error(data.error.message);\n          dispatch(initUser(data));\n          dispatch(removeError());\n        })\n        .catch((error) => {\n          dispatch(setError(String(error)));\n        });\n    },\n    init: () => {\n      fetch(server_url + \"/api/auth\", {\n        method: \"GET\",\n        credentials: \"include\",\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.error) throw new Error(data.error.message);\n          dispatch(initUser(data));\n          dispatch(removeError());\n          dispatch(\n            getPosition({\n              latitude: 40,\n              longitude: -77,\n            })\n          );\n        })\n        .catch((error) => {\n          //do nothing\n        });\n    },\n    signup: (user) => {\n      fetch(server_url + \"/api/auth/signup\", {\n        method: \"POST\",\n        credentials: \"include\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(user),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.error) throw new Error(data.error.message);\n          dispatch(initUser(data));\n          dispatch(removeError());\n        })\n        .catch((error) => {\n          dispatch(setError(String(error)));\n        });\n    },\n    setError: (error) => {\n      dispatch(setError(error));\n    },\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import React from 'react';\nimport './App.css';\nimport {Provider} from 'react-redux'\nimport Panel from './component/Restarant_card/Panel'\nimport store from './stores'\nimport Navbar from './component/Navbar/Navbar'\n\nfunction App() {\n  return (        \n    <Provider store={store}>    \n      <Navbar/>\n      <Panel></Panel>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}